name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  industrial_ci:
    strategy:
      fail-fast: false
      matrix:
        env:
          - {BADGE: focal,
             OS_NAME: ubuntu,
             OS_CODE_NAME: focal,
             ROS_DISTRO: noetic,
             ROS_REPO: main,
             ADDITIONAL_DEBS: 'git clang-tidy',
             UPSTREAM_WORKSPACE: 'dependencies.rosinstall',
             VERBOSE_TESTS: true,
             TARGET_CMAKE_ARGS: "-DINDUSTRIAL_CALIBRATION_ENABLE_TESTING=ON -DINDUSTRIAL_CALIBRATION_ENABLE_RUN_TESTING=OFF -DINDUSTRIAL_CALIBRATION_ENABLE_CLANG_TIDY=ON",
             CTEST_OUTPUT_ON_FAILURE: true,
             AFTER_SCRIPT: "cd $target_ws/build/industrial_calibration && ctest -V"}
          - {BADGE: bionic,
             OS_NAME: ubuntu,
             OS_CODE_NAME: bionic,
             ROS_DISTRO: melodic,
             ROS_REPO: main,
             ADDITIONAL_DEBS: 'git clang-tidy',
             UPSTREAM_WORKSPACE: 'dependencies.rosinstall',
             VERBOSE_TESTS: true,
             TARGET_CMAKE_ARGS: "-DINDUSTRIAL_CALIBRATION_ENABLE_TESTING=ON -DINDUSTRIAL_CALIBRATION_ENABLE_RUN_TESTING=OFF -DINDUSTRIAL_CALIBRATION_ENABLE_CLANG_TIDY=ON",
             CTEST_OUTPUT_ON_FAILURE: true,
             AFTER_SCRIPT: "cd $target_ws/build/industrial_calibration && ctest -V"}
          - {BADGE: clang-format,
             OS_NAME: ubuntu,
             OS_CODE_NAME: focal,
             ROS_DISTRO: noetic,
             ROS_REPO: main,
             ADDITIONAL_DEBS: 'git',
             CLANG_FORMAT_CHECK: file,
             CLANG_FORMAT_VERSION: 8}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: 'ros-industrial/industrial_ci@master'
        env: ${{matrix.env}}
